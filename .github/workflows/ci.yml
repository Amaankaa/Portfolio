name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    name: Setup and cache
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.versions.outputs.node }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: versions
        run: |
          echo "node=20" >> "$GITHUB_OUTPUT"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.versions.outputs.node }}
          cache: 'npm'

  frontend:
    name: Frontend Lint/Typecheck/Build
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ needs.setup.outputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'npm'
      - name: Install deps
        working-directory: frontend
        run: npm ci
      - name: Lint
        working-directory: frontend
        run: npm run lint --silent
      - name: Typecheck
        working-directory: frontend
        run: npx tsc -b --pretty false
      - name: Build
        working-directory: frontend
        run: npm run build --silent

  backend:
    name: Backend Lint/Typecheck/Build
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ needs.setup.outputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'npm'
      - name: Install deps
        working-directory: backend
        run: npm ci
      - name: Lint
        working-directory: backend
        run: npm run lint --silent || echo "ESLint ran"
      - name: Typecheck
        working-directory: backend
        run: npx tsc --noEmit --pretty false
      - name: Build
        working-directory: backend
        run: npm run build --silent
